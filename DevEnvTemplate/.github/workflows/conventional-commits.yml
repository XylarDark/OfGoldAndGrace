name: Conventional Commits

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize

permissions:
  contents: read
  pull-requests: write

jobs:
  conventional-commits:
    name: Check PR Title Format
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check PR title format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed
          types: |
            feat
            fix
            refactor
            perf
            docs
            test
            chore
            ci
            build
            revert
          # Require at least one scope
          requireScope: false
          # Allow blank lines in subject
          ignoreLabels: |
            bot
            ignore-semantic-pull-request
          # Custom validation error message
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}" doesn't match the required pattern. Please ensure your PR title follows conventional commit format.

            Examples of valid titles:
            - `feat(auth): add user login validation`
            - `fix(ui): resolve button focus trap`
            - `docs(readme): update installation instructions`
            - `test(api): add endpoint coverage`

            See: https://conventionalcommits.org/
        # Report-only: Don't fail the build
        continue-on-error: true

      - name: Generate summary
        run: |
          echo "## Conventional Commits Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### What are Conventional Commits?" >> $GITHUB_STEP_SUMMARY
          echo "A specification for adding human and machine readable meaning to commit messages." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Format" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "type(scope): description" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[optional body]" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[optional footer]" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Allowed Types" >> $GITHUB_STEP_SUMMARY
          echo "- \`feat\`: New feature" >> $GITHUB_STEP_SUMMARY
          echo "- \`fix\`: Bug fix" >> $GITHUB_STEP_SUMMARY
          echo "- \`refactor\`: Code refactoring" >> $GITHUB_STEP_SUMMARY
          echo "- \`perf\`: Performance improvement" >> $GITHUB_STEP_SUMMARY
          echo "- \`docs\`: Documentation changes" >> $GITHUB_STEP_SUMMARY
          echo "- \`test\`: Test additions/updates" >> $GITHUB_STEP_SUMMARY
          echo "- \`chore\`: Maintenance tasks" >> $GITHUB_STEP_SUMMARY
          echo "- \`ci\`: CI/CD changes" >> $GITHUB_STEP_SUMMARY
          echo "- \`build\`: Build system changes" >> $GITHUB_STEP_SUMMARY
          echo "- \`revert\`: Revert previous commit" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Examples" >> $GITHUB_STEP_SUMMARY
          echo "- \`feat(auth): add user login validation\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`fix(ui): resolve button focus trap\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`docs(readme): update installation instructions\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`test(api): add endpoint coverage\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Benefits" >> $GITHUB_STEP_SUMMARY
          echo "- **Automated Changelog**: Generate changelogs from commit messages" >> $GITHUB_STEP_SUMMARY
          echo "- **Semantic Versioning**: Determine version bumps automatically" >> $GITHUB_STEP_SUMMARY
          echo "- **Clear History**: Understand the nature of changes at a glance" >> $GITHUB_STEP_SUMMARY
          echo "- **Tool Integration**: Works with release tools and CI/CD pipelines" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
